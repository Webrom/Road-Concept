swagger: '2.0'
info:
  title: Portail d'intéractions du simulateur de traffic Road Concept
  description: Aide à l'utilisation de l'API
  version: "0.1"
host: localhost:8080
schemes:
  - http
produces:
  - application/json

parameters:
  mapID:
    name: mapID
    in: path
    required: true
    type: integer
    format: int32

paths:
  /login:
    post:
      parameters:
        - name: credentials
          in: body
          description: Identifiants de l'utilisateur souhaitant se connecter.
          required: true
          schema:
            $ref: '#/definitions/UserCredentials'
      tags:
        - Authentification
      responses:
        204:
          description: Utilisateur corretement authentifié. Un cookie a été retourné et doit être envoyé au serveur à chaque prochaine requête dont le path commence par "/api".
        400:
          $ref: '#/responses/400'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

  /api/me:
    get:
      tags:
        - Authentification
        - Utilisateurs
      description: Récupère les informations sur l'utilisateur acctuellement connecté
      responses:
        202:
          description: Détails de l'utilisateur
          schema:
            $ref: '#/definitions/User'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

  /api/logout:
    post:
      tags:
        - Authentification
      responses:
        204:
          description: Utilisateur corretement déconnecté.
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        500:
          $ref: '#/responses/500'

  /api/users:
    get:
      description: Récupérer la liste de tous les utilisateurs
      tags:
        - Utilisateurs
      responses:
        202:
          description: Liste des utilisateurs éxistants
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        401:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

  /api/maps:
    get:
      tags:
        - Cartes
      description: Retourne les informations générales sur toutes les cartes d'un utilisateur
      responses:
        201:
          description: Requête correctement éxécutée.
          schema:
            type: array
            items:
              $ref: '#/definitions/MapInfo'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

  /api/maps/{mapID}:
    get:
      parameters:
        - $ref: '#/parameters/mapID'
      tags:
        - Cartes
      description: Retourne le contenu d'une carte identifiée par son ID
      responses:
        201:
          description: Requête correctement éxécutée.
          schema:
              $ref: '#/definitions/Map'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

responses:
  '400':
    description: Mauvaise requête. Vérifier les paramètres et les formats.
    schema :
      $ref: '#/definitions/RestException'
  '401':
    description: Authentification nécéssaire. Voir méthode POST /login.
    schema :
      $ref: '#/definitions/RestException'
  '403':
    description: Accès refusé.
    schema:
      $ref: '#/definitions/RestException'
  '500':
    description: Erreur interne au serveur. Contacter un administrateur de l'API.
    schema:
      $ref: '#/definitions/RestException'

definitions:
  RestException:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string

  UserCredentials:
    properties:
      email:
        type: string
      password:
        type: string
        format: password

  User:
    properties:
      email:
        type: string
        description: Login de l'utilisateur conneté
      firstName:
        type: string
        description: Prénom de l'utilisateur
      lastName:
        type: string
        description: Nom de famille de l'utilisateur
      type:
        type: string
        enum:
          - USER
          - ADMINISTRATOR
        description: Status de l'utilisateur

  MapInfo:
    properties:
      id:
        type: integer
        format: int32
        description: ID de la carte. Ne peut pas etre null
      name:
        type: string
        description: Nom de la carte. Peux être vide mais non null
      imageURL:
        type: string
        description: URL d'une image représentant la carte. Peut être null
      description:
        description: Description de la carte

  Map:
    properties:
      foo:
        description: STRUCTURE COMPLEXE. VOIR DESCRIPTION DANS LE FICHIER JSON
