swagger: '2.0'
info:
  title: Portail d'intéractions du simulateur de traffic Road Concept
  description: Aide à l'utilisation de l'API
  version: "0.1"
  contact:
    name: Entreprise LannionTech
    email: lanniontech@gmail.com
host: localhost:8080
schemes:
  - http
produces:
  - application/json

parameters:
  mapID:
    name: mapID
    in: path
    required: true
    type: integer
    format: int32
  featureUUID:
    name: featureUUID
    in: path
    required: true
    type: string
    format: uuid
  simulationUUID:
    name: simulationUUID
    in: path
    required: true
    type: string
    format: uuid

paths:
  /login:
    post:
      parameters:
        - name: credentials
          in: body
          description: Identifiants de l'utilisateur souhaitant se connecter.
          required: true
          schema:
            $ref: '#/definitions/UserCredentials'
      tags:
        - Authentification
      responses:
        204:
          description: Utilisateur corretement authentifié. Un cookie a été retourné et doit être envoyé au serveur à chaque prochaine requête dont le path commence par "/api".
        400:
          $ref: '#/responses/400'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

  /api/me:
    get:
      tags:
        - Authentification
        - Utilisateurs
      description: Récupère les informations sur l'utilisateur acctuellement connecté
      responses:
        200:
          description: Détails de l'utilisateur
          schema:
            $ref: '#/definitions/User'
        401:
          $ref: '#/responses/401'
        500:
          $ref: '#/responses/500'

  /api/logout:
    post:
      tags:
        - Authentification
      responses:
        204:
          description: Utilisateur corretement déconnecté.
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        500:
          $ref: '#/responses/500'

  /api/users:
    get:
      description: Récupérer la liste de tous les utilisateurs
      tags:
        - Utilisateurs
      responses:
        200:
          description: Liste des utilisateurs éxistants
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        401:
          $ref: '#/responses/401'
        403: # Si pas admin
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'
    post:
      description: Créer un nouvel utilisateur
      parameters:
        - name: userData
          in: body
          description: Informations de l'utilisateur
          required: true
          schema:
            $ref: '#/definitions/User'
      tags:
        - Utilisateurs
      responses:
        201:
          description: Utilisateur créé
          schema:
              $ref: '#/definitions/UserCreate'
        401:
          $ref: '#/responses/401'
        403: # Si pas admin
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

  /api/users/{userID}:
    parameters:
      - name: userID
        in: path
        required: true
        type: integer
        format: int32
    delete:
      description: Supprimer un utilisateur ainsi que l'enssemble de ses cartes (irréversible).
      tags:
        - Utilisateurs
      responses:
        204:
          description: Utilisateur et maps supprimées
        401:
          $ref: '#/responses/401'
        500:
          $ref: '#/responses/500'
    get:
      description: Retourne les informations sur un utilisateur
      tags:
        - Utilisateurs
      responses:
        200:
          description: Liste des utilisateurs éxistants
          schema:
              $ref: '#/definitions/User'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
    put:
      description: Modifier un utilisateur
      parameters:
        - name: data
          in: body
          description: Informations de l'utilisateur
          required: true
          schema:
            $ref: '#/definitions/User'
      tags:
        - Utilisateurs
      responses:
        200:
          description: Liste des utilisateurs éxistants
          schema:
              $ref: '#/definitions/User'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'

  /api/maps:
    get:
      tags:
        - Cartes
      description: Retourne les informations générales sur toutes les cartes d'un utilisateur
      responses:
        200:
          description: Requête correctement éxécutée.
          schema:
            type: array
            items:
              $ref: '#/definitions/MapInfo'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'
    post:
      parameters:
        - name: name
          in: body
          schema:
            $ref: '#/definitions/MapInfoCreate'
      description: Créer une nouvelle carte
      tags:
        - Cartes
      responses:
        201:
          description: Carte créée
          schema:
              $ref: '#/definitions/MapInfo'
        401:
          $ref: '#/responses/401'
        403: # Si pas admin
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

  /api/maps/{mapID}:
    parameters:
      - $ref: '#/parameters/mapID'
    get:
      tags:
        - Cartes
      description: Retourne le contenu d'une carte identifiée par son ID
      responses:
        200:
          description: Requête correctement éxécutée.
          schema:
              $ref: '#/definitions/Map'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
    delete:
      description: Supprimer un utilisateur ainsi que l'enssemble de ses cartes (irréversible).
      tags:
        - Cartes
      responses:
        204:
          description: Map supprimée
        401:
          $ref: '#/responses/401'
        403: # Map pas à lui ou pas admin
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

  /api/maps/{mapID}/import:
    parameters:
      - $ref: '#/parameters/mapID'
    post:
      parameters:
        - name: data
          in: formData
          type: file
          required: true
          description: Fichier XML contenant la carte à importer. Doit provenir du site Open Street Map.
      description: Importe des données d'Open Street Map dans une carte éxistante
      tags:
        - Cartes
        - Import
      responses:
        204:
          description: Fichier importé. A préciser...
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

  /api/maps/{mapID}/features:
    parameters:
      - $ref: '#/parameters/mapID'
    post:
      parameters:
        - name: feature
          in: body
          description: Feature complète
          required: true
          schema:
            $ref: '#/definitions/Map'
      description: Ajouter une feature à une map existante
      tags:
        - Cartes
      responses:
        201:
          description: Feature créée. Retourne la feature complète avec son ID.
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

  /api/maps/{mapID}/features/{featureUUID}:
    parameters:
      - $ref: '#/parameters/mapID'
      - $ref: '#/parameters/featureUUID'
    get:
      description: Ajouter une feature à une map existante
      tags:
        - Cartes
      responses:
        201:
          description: Feature complète
        404:
          $ref: '#/responses/404'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'
    delete:
      description: Ajouter une feature à une map existante
      tags:
        - Cartes
      responses:
        204:
          description: OK
        404:
          $ref: '#/responses/404'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'
    put:
      description: Modifier une feature éxistante
      parameters:
        - name: feature
          in: body
          description: Feature complète
          required: true
          schema:
            $ref: '#/definitions/Map'
      tags:
        - Cartes
      responses:
        200:
          description: Feature complète
        404:
          $ref: '#/responses/404'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

  /api/maps/{mapID}/simulations:
    parameters:
      - $ref: '#/parameters/mapID'
    post:
      description: Créer et lancer une nouvelle simulation
      tags:
        - Simulations
      parameters:
        - name: simulationData
          in: body
          description: Informations sur la simulation à créer
          required: true
          schema:
            $ref: '#/definitions/SimulationCreate'
      responses:
        201:
          description: La simulation a été créee et lancée. Elle est probablement encore en cours d'éxécution.
          schema:
              $ref: '#/definitions/User'
        404:
          $ref: '#/responses/404'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

    get:
      description: Récupérer la liste des simulations associées à une map
      tags:
        - Simulations
      responses:
        200:
          description: Liste de simulations (éxécuter pour voir le retour)
        404:
          $ref: '#/responses/404'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

  /api/maps/{mapID}/simulations/{simulationUUID}:
    parameters:
      - $ref: '#/parameters/mapID'
      - $ref: '#/parameters/simulationUUID'
    delete:
      description: Supprimer une simulation
      tags:
        - Simulations
      responses:
        204:
          description: Simulation supprimée
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

  /api/users/{userID}/simulations:
    parameters:
      - name: userID
        in: path
        required: true
        type: integer
        format: int32
    get:
      description: Récupérer la liste des simulations associées à un utilisateur
      tags:
        - Simulations
      responses:
        200:
          description: Liste de simulations
          schema:
            type: array
            items:
              $ref: '#/definitions/Simulation'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

  /api/simulations/{simulationUUID}:
    parameters:
      - $ref: '#/parameters/simulationUUID'
    get:
      description: Récupère les détails d'une simulation
      tags:
        - Simulations
      responses:
        200:
          description: la simulation
          schema:
              $ref: '#/definitions/User'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

    delete:
      description: Supprimer une simulation
      tags:
        - Simulations
      responses:
        204:
          description: Simulation supprimée
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

  /api/simulations/{simulationUUID}/progress:
    parameters:
      - $ref: '#/parameters/simulationUUID'
    get:
      description: Récupère le pourcentage d'avancement d'éxécution d'une simulation.
      tags:
        - Simulations
      responses:
        200:
          description: la simulation
          schema:
            type: integer
            format: int32
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        500:
          $ref: '#/responses/500'

  /api/simulations/{simulationUUID}/results:
    parameters:
      - $ref: '#/parameters/simulationUUID'

  /api/simulations/{simulationUUID}/vehicles/{vehicleID}:
    parameters:
      - $ref: '#/parameters/simulationUUID'
      - name: vehicleID
        in: path
        type: integer
        format: int32
        required: true

responses:
  '400':
    description: Mauvaise requête. Vérifier les paramètres et les formats.
    schema :
      $ref: '#/definitions/RestErrorMessage'
  '401':
    description: Authentification nécéssaire. Voir méthode POST /login.
    schema :
      $ref: '#/definitions/RestErrorMessage'
  '403':
    description: Accès refusé.
    schema:
      $ref: '#/definitions/RestErrorMessage'
  '404':
    description: Entitée innéxistante.
    schema:
      $ref: '#/definitions/RestErrorMessage'
  '500':
    description: Erreur interne au serveur. Contacter un administrateur de l'API.
    schema:
      $ref: '#/definitions/RestErrorMessage'

definitions:
  RestErrorMessage:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string

  UserCredentials:
    properties:
      email:
        type: string
      password:
        type: string
        format: password

  User:
    properties:
      id:
        type: integer
        format: int32
        description: id de l'utilisateur
      email:
        type: string
        description: Login de l'utilisateur conneté
      lastName:
        type: string
        description: Nom de famille de l'utilisateur
      firstName:
        type: string
        description: Prénom de l'utilisateur
      type:
        type: integer
        format: int32
        enum:
          - 1
          - 2
        description: Status de l'utilisateur. 1 = Utilisateur et 2 = Administrateur

  UserCreate:
    properties:
      email:
        type: string
        description: Login de l'utilisateur conneté
      lastName:
        type: string
        description: Nom de famille de l'utilisateur
      firstName:
        type: string
        description: Prénom de l'utilisateur
      password:
        type: string
        format: password
        description: password de l'utilisateur (en clair)
      type:
        type: integer
        format: int32
        enum:
          - 1
          - 2
        description: Status de l'utilisateur. 1 = Utilisateur et 2 = Administrateur

  MapInfo:
    properties:
      id:
        type: integer
        format: int32
        description: ID de la carte. Ne peut pas etre null
      name:
        type: string
        description: Nom de la carte. Peux être vide mais non null
      image_url:
        type: string
        description: URL d'une image représentant la carte. Peut être null
      description:
        description: Description de la carte

  MapInfoCreate:
    properties:
      name:
        type: string
        description: Nom de la carte
      image_url:
        type: string
        description: URL d'une image représentant la carte. Peut être null
      description:
        description: Description de la carte

  SimulationCreate:
    properties:
      name:
        type: string
        description: Nom de la simulation
      sampling_rate:
        type: integer
        format: int32
        description: Taux d'échantillonage de la simulation
      departure_living_s:
        type: integer
        format: int32
        description: Heure de départ de la zone d'habitation (en secondes depuis minuit de la zone de travail)
      departure_working_s:
        type: integer
        format: int32
        description: Heure de départ de la zone de travail (en secondes depuis minuit de la zone de travail)
      living_feature:
        type: string
        format: uuid
        description: UUID de la route correspondant au lieu d'habitation
      working_feature:
        description: UUID de la route correspondant au lieu de travail
        type: string
        format: uuid
      car_percentage:
        type: integer
        format: int32
        description: Répartition en % des voitures. Le reste des véhicules seront des camions.
      vehicle_count:
        type: integer
        format: int32
        description: Nombre total de véhicule sur la simulation

  Simulation:
    properties:
      uuid:
        type: string
        format: uuid
      name:
        type: string
        description: Nom de la simulation
      creatorID:
        type: integer
        format: int32
      mapID:
        type: integer
        format: int32
      creationDate:
        type: string
      finish:
        type: boolean
      sampling_rate:
        type: integer
        format: int32
        description: Taux d'échantillonage de la simulation
      departure_living_s:
        type: integer
        format: int32
        description: Heure de départ de la zone d'habitation (en secondes depuis minuit de la zone de travail)
      departure_working_s:
        type: integer
        format: int32
        description: Heure de départ de la zone de travail (en secondes depuis minuit de la zone de travail)
      living_feature:
        type: string
        format: uuid
        description: UUID de la route correspondant au lieu d'habitation
      working_feature:
        description: UUID de la route correspondant au lieu de travail
        type: string
        format: uuid
      car_percentage:
        type: integer
        format: int32
        description: Répartition en % des voitures. Le reste des véhicules seront des camions.
      vehicle_count:
        type: integer
        format: int32
        description: Nombre total de véhicule sur la simulation

  Map:
    properties:
      foo:
        description: STRUCTURE COMPLEXE. VOIR DESCRIPTION DANS LE FICHIER JSON
